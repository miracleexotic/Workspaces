- name: "| Docker | Get zsh path"
  shell: which zsh
  args:
    executable: /bin/bash
  register: zsh
- name: Print out
  debug:
    var: zsh

- name: "| Docker | Install require library - Cert and Libs."
  apt:
    pkg:
      - apt-transport-https
      - ca-certificates
      - curl
      - software-properties-common
    update_cache: yes
  register: result
- name: Print out
  debug:
    var: result

# Add Docker's official GPG key:
- name: "| Docker | Install /etc/apt/keyrings"
  become_user: { { user } }
  shell: install -m 0755 -d /etc/apt/keyrings
  args:
    executable: "{{ zsh.stdout }}"
  register: result
- name: Print out
  debug:
    var: result

- name: "| Docker | Add GPG key."
  become_user: { { user } }
  shell: curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
  args:
    executable: "{{ zsh.stdout }}"
  register: result
- name: Print out
  debug:
    var: result

- name: "| Docker | Upgrade permission."
  become_user: { { user } }
  shell: chmod a+r /etc/apt/keyrings/docker.asc
  args:
    executable: "{{ zsh.stdout }}"
  register: result
- name: Print out
  debug:
    var: result

# Add the repository to Apt sources:
- name: "| Docker | Add the Docker repository to APT sources"
  shell: echo \
    "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
    $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
    sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
  args:
    executable: "{{ zsh.stdout }}"
  register: result
- name: Print out
  debug:
    var: result

- name: "| Docker | Make sure you are about to install from the Docker repo instead of the default Ubuntu repo."
  shell: apt-cache policy docker-ce
  args:
    executable: "{{ zsh.stdout }}"
  register: result
- name: Print out
  debug:
    var: result

# Install the Docker packages.
- name: "| Docker | Finally, install Docker."
  apt:
    pkg:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
    update_cache: yes
  register: result
- name: Print out
  debug:
    var: result

- name: "| Docker | Check that itâ€™s running."
  shell: systemctl status docker
  args:
    executable: "{{ zsh.stdout }}"
  register: result
- name: Print out
  debug:
    var: result

- name: "| Docker | Execute docker without sudo."
  become_user: "{{ user }}"
  shell: sudo usermod -aG docker {{ user }}
  args:
    executable: "{{ zsh.stdout }}"
  register: result
- name: Print out
  debug:
    var: result

- name: "| Docker | Apply new group member, log out and back in."
  become_user: "{{ user }}"
  shell: sudo su - {{ user }}
  args:
    executable: "{{ zsh.stdout }}"
  register: result
- name: Print out
  debug:
    var: result

- name: "| Docker | Check user group."
  become_user: "{{ user }}"
  shell: groups
  args:
    executable: "{{ zsh.stdout }}"
  register: result
- name: Print out
  debug:
    var: result

- name: "| Docker | Verify Docker."
  shell: docker info
  args:
    executable: "{{ zsh.stdout }}"
  register: result
- name: Print out
  debug:
    var: result
